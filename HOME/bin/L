#!/bin/bash

. ~/.bashrc

export EDITOR=vi

YYYY=`date +%Y`

D2=${2:-`pwd`}

D1=/usr/local/bin/a/b/c
D1=/nfs/md7/GPS
D1=/nfs/md7/GPS/libs_apps/src
D1=/nfs/md7/AIR/src_relay/src
D1=/home/athome/G/ftp_2010_
D1=/media/X3/2011/src/libs_apps
D1=/home/gps/YEAR/src/PLAY/libs_apps

echo DISPLAY was $DISPLAY
# export DISPLAY=${DISPLAY:-localhost:10.0}

is_root()
{
	id | grep root > /dev/null
}

if [ ! -d $HOME/YEAR/ ]
then
	D1=$HOME/G/nfs/nfs_scripts_2
fi
	if [ "$D2" == "$HOME" ]
	then

		[ -d YEAR ] && cd YEAR 
		[ -d $YYYY/ ] && cd $YYYY 
		[ -d src/ ] && cd src 
		# above never happens when HOME/YEAR not mounted
		[ -d G ] && cd G 
		[ -d PVR ] && cd PVR 
		#
		D2=${2:-`pwd`}

	fi

if is_root
then
	D1=/home/gps/YEAR/ADMIN
fi
[ -d $D1/ ] || D1=`dirname $D1`
[ -d $D1/ ] || D1=`dirname $D1`
[ -d $D1/ ] || D1=`dirname $D1`
[ -d $D1/ ] || D1=`dirname $D1`

D1=${1:-$D1}

# errm D2 is as PWD was ...
# these || && dont work quite like I thought
# they do go on the the next, was YEAR/G/ now YEAR/src/
# except now not - back to YEAR/G/ !!
#
# no no # [ -d YEAR ] || cd /nfs/NAS2/
[ -d YEAR ] && cd YEAR \
|| \
[ -d $YYYY/ ] && cd $YYYY \
|| \
[ -d src/ ] && cd src \
|| \
[ -d G ] && cd G \
#

echo "## D2 ## $D2"

cd 

# Authorization required, but no authorization protocol specified
# working fine until a root L happens
# then that sets the auth for root, but at the expense of user1
#
## then this:
## xauth:
##  /run/user/1000/.mutter-Xwaylandauth.CTVOP2
##  not writable, changes will be ignored
## the run as root did the chown

set_auth()
{
echo set_auth ... echo $DISPLAY
  # echo \
	xauth add $(xauth -f ~gps/.Xauthority list | tail -1)
	chown gps /run/user/1016/.mutter-Xwaylandauth.*
}

# set_auth

FGBG="-fg black -bg white" # RASH multiword
is_root && FGBG="-fg green -bg black" # RASH multiword
is_root && set_auth
# when xterm gets HUGE font - 51 lines on screen under xfce
WW=80
HH=51
HH=45
HH=43
FONTS="-fa Monospace -fs 14"
# ssh from elsewhere # use smaller HH 
[ -z "$SSH_CLIENT" ] || HH=35
set -x
xterm  $FGBG $FONTS -geometry ${WW}x${HH} -e mc $D1 $D2 &
sleep 2

# sleep 5
# env | grep SSH_CONNECTION && sleep 40

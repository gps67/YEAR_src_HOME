# fns_FAIL

fn_is_not_decimal() {
	if fn_is_decimal "$@"
	then
		return 22
	else
		return 0
	fi
}

fn_is_decimal()
{
	if [ $# == 0 ]
	then
		return 1
	fi
	if [ "$1" == '' ]
	then
		return 1
	fi

	expr match "$1" '^[0-9]*$' > /dev/null
}

fn_FAIL() {
	local errn=22
	if fn_is_decimal "$1"
	then
		errn="$1"
		shift
	else
		echo >&2 "# WARN # you should pass $? to FAIL as first arg"
	fi
	echo -n >&2 "# FAIL # $errn # $* # "
	perror $errn
	set -x
	exit $errn
	# $1 should be errno - or should errno be errno ?
	echo >&2 "# FAIL # FAIL SHOULD HAVE EXITED "
	sleep 2
	return 1
}

FAIL() {
	local errn=$?
	if fn_is_decimal "$1"
	then
		errn="$1"
		shift
	fi
	fn_FAIL "${errn}" "$@"
	# fn_FAIL "$*i # errno==$errn" # IS THIS REAL SYNTAX ??
}

fn_WARN() {
	local errn=22
	if fn_is_decimal "$1"
	then
		errn="$1"
		shift
	else
		echo >&2 "# WARN # you should pass $? to WARN as first arg"
	fi
	echo -n >&2 "# WARN # $errn # $* # "
	return 1
}

